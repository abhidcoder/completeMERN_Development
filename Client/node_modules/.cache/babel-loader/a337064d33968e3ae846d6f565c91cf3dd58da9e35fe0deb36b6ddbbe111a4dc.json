{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumarsingh/Desktop/jobRobo/jpbrobo/Client/src/UserList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserList() {\n  _s();\n  //Using the State to set the UserList from the API\n  const [userList, setUserList] = useState([]);\n  const serverUrl = \"http://localhost:8001\";\n\n  //Getting the List of the users from the API\n  //Using the fetch APIs Instead of Axios to avoid additional Dependencies for the project to be lighter resulting in faster proccessing.\n\n  useEffect(() => {\n    const getUserList = async () => {\n      try {\n        const response = await fetch(serverUrl + '/getClientLists', {\n          method: 'GET'\n        });\n        if (!response.ok) {\n          throw new Error('API request failed');\n        }\n        const datas = await response.json();\n        const data = datas.data;\n        setUserList(data);\n      } catch (error) {\n        console.error('API request failed: While Getting the ClientList', error);\n      }\n    };\n    getUserList();\n  }, []); // Insering Empty dependency array to ensure that useEffect runs only once and not Making any unnecessary requests to API\n\n  //Keeping the track of the Deleted User list so that /getClientLists Endpoint should not be hit over and over again\n  const deleteUser = async phoneNo => {\n    try {\n      // Making a POST request to the API to delete the user via API, treating phone number as a unique identifier\n      // Using a parameterized way and POST request to hit the API\n      // Using parameterized query to increase the performance and keeping it readable as the data is not sensitive\n      // Processing the deletion data by using filteration at client side saves API from too many requests while getting the list from the API after the deletion of the client from the list.\n\n      const response = await fetch(serverUrl + '/deleteUser/' + phoneNo, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        // Handle success (e.g., remove the row from the state)\n        setUserList(userList => userList.filter(user => user.phoneNo !== phoneNo));\n      } else {\n        throw new Error('Delete request failed');\n      }\n    } catch (error) {\n      console.error('Delete request failed:', error);\n    }\n  };\n  const editUser = phoneNo => {\n    // Redirect to the edit endpoint with the phoneNo\n    window.location.href = '/edit?phone=' + phoneNo;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/addUser\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: '#007BFF',\n            color: 'white'\n          },\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"user-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CTA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"spoc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mobile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CreatedDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: userList.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.phoneNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.first_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.last_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.street\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"actions\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"edit-button\",\n              onClick: () => editUser(user.phooneNo),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"actions\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delete-button\",\n              onClick: () => deleteUser(user.phoneNo),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, user.phoneNo, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(UserList, \"XZtmH22gSBQm+njpQReo0puLaas=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserList","_s","userList","setUserList","serverUrl","getUserList","response","fetch","method","ok","Error","datas","json","data","error","console","deleteUser","phoneNo","filter","user","editUser","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","backgroundColor","color","className","map","first_name","last_name","street","address","onClick","phooneNo","_c","$RefreshReg$"],"sources":["/Users/abhishekkumarsingh/Desktop/jobRobo/jpbrobo/Client/src/UserList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction UserList() {\n\n  //Using the State to set the UserList from the API\n  const [userList, setUserList] = useState([]);\n\n  const serverUrl = \"http://localhost:8001\";\n\n  //Getting the List of the users from the API\n  //Using the fetch APIs Instead of Axios to avoid additional Dependencies for the project to be lighter resulting in faster proccessing.\n\n  useEffect(() => {\n    const getUserList = async () => {\n      try {\n        const response = await fetch(serverUrl +'/getClientLists', {\n          method: 'GET', \n        });\n        if (!response.ok) {\n          throw new Error('API request failed');\n        }\n        const datas = await response.json();\n        const data = datas.data;\n        setUserList(data);\n      } catch (error) {\n        console.error('API request failed: While Getting the ClientList', error);\n      }\n    };\n    getUserList();\n  }, []);  // Insering Empty dependency array to ensure that useEffect runs only once and not Making any unnecessary requests to API\n\n\n\n  //Keeping the track of the Deleted User list so that /getClientLists Endpoint should not be hit over and over again\n  const deleteUser = async (phoneNo) => {\n    try {\n\n      // Making a POST request to the API to delete the user via API, treating phone number as a unique identifier\n      // Using a parameterized way and POST request to hit the API\n      // Using parameterized query to increase the performance and keeping it readable as the data is not sensitive\n      // Processing the deletion data by using filteration at client side saves API from too many requests while getting the list from the API after the deletion of the client from the list.\n\n      const response = await fetch(serverUrl +'/deleteUser/' + phoneNo, {\n        method: 'POST',\n      });\n  \n      if (response.ok) {\n        // Handle success (e.g., remove the row from the state)\n        setUserList((userList) =>\n        userList.filter((user) => user.phoneNo !== phoneNo)\n        );\n      } else {\n        throw new Error('Delete request failed');\n      }\n    } catch (error) {\n      console.error('Delete request failed:', error);\n    }\n  };\n\n\n  const editUser = (phoneNo) => {\n    // Redirect to the edit endpoint with the phoneNo\n    window.location.href = '/edit?phone=' + phoneNo; \n  };\n\n  return (\n    <div>\n      <h1>User Lists</h1>\n      <div style={{ textAlign: 'center' }}>\n        {/* Add a \"Create\" button that links to the /create endpoint */}\n        <a href=\"/addUser\">\n          <button style={{ backgroundColor: '#007BFF', color: 'white' }}>\n            Create\n          </button>\n        </a>\n      </div>\n\n      <table className=\"user-table\">\n        <thead>\n          <tr>\n            <th>Contact</th>\n            <th>CTA</th>\n            <th>spoc</th>\n            <th>Mobile</th>\n            <th>Email</th>\n            <th>CreatedDate</th>\n          </tr>\n        </thead>\n        <tbody>\n          {userList.map((user) => (\n            <tr key={user.phoneNo}>\n              <td>{user.phoneNo}</td>\n              <td>{user.first_name}</td>\n              <td>{user.last_name}</td>\n              <td>{user.street}</td>\n              <td>{user.address}</td>\n              <td>{user.address}</td>\n              <td className=\"actions\">\n                <span className=\"edit-button\" onClick={() => editUser(user.phooneNo)}>\n                  Edit\n                </span>\n              </td>\n              <td className=\"actions\">\n                <span\n                  className=\"delete-button\"\n                  onClick={() => deleteUser(user.phoneNo)}\n                >\n                  Delete\n                </span>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default UserList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}